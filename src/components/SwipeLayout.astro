---
// src/components/SwipeLayout.astro
import { ClientRouter } from 'astro:transitions';
import NavArrows from './NavArrows.astro';
import '../styles/global.css';

interface Props {
	title: string;
  prevUrl?: string;
  nextUrl?: string;
}

const { title, prevUrl, nextUrl } = Astro.props;
---
<html lang="en">
	<head>
		<meta charset="utf-8" />
		<meta name="viewport" content="width=device-width" />
		<meta name="generator" content={Astro.generator} />
		<title>{title}</title>
		
		{/* Favicon links, fonts, etc. */}
		<link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png">
    <link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png">
    <link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png">
    <link rel="shortcut icon" href="/favicon.ico">
		<script data-goatcounter="https://stefanyas.goatcounter.com/count"
        async src="//gc.zgo.at/count.js"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.2/css/all.min.css" integrity="sha512-SnH5WK+bZxgPHs44uWIX+LLJAJ9/2PkPKZ5QiAj6Ta86w+fsb2TkcmfRyVX3pBnMFcV7oQPJkl9QevSCWr3W6A==" crossorigin="anonymous" referrerpolicy="no-referrer" />
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=JetBrains+Mono:wght@100..800&display=swap" rel="stylesheet">

		<ClientRouter />
	</head>
	<body>
    <NavArrows prevUrl={prevUrl} nextUrl={nextUrl} />
		<slot />
	</body>
</html>
<script is:inline>
  // --- DESKTOP KEYBOARD NAVIGATION ---
  document.addEventListener('keydown', (e) => {
    if (e.key === 'ArrowLeft') {
      const prev = document.querySelector('.arrow.prev');
      if (prev) window.location.href = prev.href;
    } else if (e.key === 'ArrowRight') {
      const next = document.querySelector('.arrow.next');
      if (next) window.location.href = next.href;
    }
  });

  // --- MOBILE SWIPE NAVIGATION ---
  let touchstartY = 0;
  let touchendY = 0;
  const swipeThreshold = 100; // Minimum vertical distance for a swipe

  function handleSwipe() {
    const swipeDistance = touchendY - touchstartY;

    if (Math.abs(swipeDistance) < swipeThreshold) {
      return;
    }

    if (swipeDistance < 0) { // Swiped up
      const next = document.querySelector('.arrow.next');
      if (next) window.location.href = next.href;
    } else { // Swiped down
      const prev = document.querySelector('.arrow.prev');
      if (prev) window.location.href = prev.href;
    }
  }

  document.addEventListener('touchstart', e => {
    touchstartY = e.changedTouches[0].screenY;
  }, { passive: true });

  document.addEventListener('touchend', e => {
    touchendY = e.changedTouches[0].screenY;
    handleSwipe();
  }, { passive: true });
</script>