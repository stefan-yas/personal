---
// src/components/SwipeLayout.astro
import NavArrows from './NavArrows.astro';
import PageIndicator from './PageIndicator.astro';
import EasterEgg from './EasterEgg.astro'; // Import the new component
import '../styles/global.css';

interface Props {
  title: string;
  prevUrl?: string;
  nextUrl?: string;
  totalPages: number;
  currentPage: number;
}

const { title, prevUrl, nextUrl, totalPages, currentPage } = Astro.props;
---
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
    <link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png">
    <link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png">
    <link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png">
    <link rel="shortcut icon" href="/favicon.ico">
    <script data-goatcounter="https://stefanyas.goatcounter.com/count"
      async src="//gc.zgo.at/count.js"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.2/css/all.min.css" crossorigin="anonymous" referrerpolicy="no-referrer" />
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=JetBrains+Mono:wght@100..800&display=swap" rel="stylesheet">
  </head>
 
  <body>
    <NavArrows prevUrl={prevUrl} nextUrl={nextUrl} />
    <slot />
    <PageIndicator totalPages={totalPages} currentPage={currentPage} />
    <EasterEgg /> 
    <script is:inline>
      // --- KEYBOARD NAVIGATION ---
      document.addEventListener('keydown', (e) => {
        if (window.innerWidth <= 600) {
          if (e.key === 'ArrowUp') {
            const prev = document.querySelector('.arrow.prev');
            if (prev) window.location.href = prev.href;
          } else if (e.key === 'ArrowDown') {
            const next = document.querySelector('.arrow.next');
            if (next) window.location.href = next.href;
          }
        } else {
          if (e.key === 'ArrowLeft') {
            const prev = document.querySelector('.arrow.prev');
            if (prev) window.location.href = prev.href;
          } else if (e.key === 'ArrowRight') {
            const next = document.querySelector('.arrow.next');
            if (next) window.location.href = next.href;
          }
        }
      });
      // --- SWIPE NAVIGATION ---
      let touchstartX = 0;
      let touchendX = 0;
      let touchstartY = 0;
      let touchendY = 0;
      const swipeThreshold = 50;
      // Minimum distance for a swipe in pixels

      function handleSwipe() {
        if (window.innerWidth <= 600) {
          const swipeDistance = touchendY - touchstartY;
          if (Math.abs(swipeDistance) < swipeThreshold) {
            return;
          }
          if (swipeDistance < 0) {
            // Swiped up, go to the next page
            const next = document.querySelector('.arrow.next');
            if (next) window.location.href = next.href;
          } else {
            // Swiped down, go to the previous page
            const prev = document.querySelector('.arrow.prev');
            if (prev) window.location.href = prev.href;
          }
        } else {
          const swipeDistance = touchendX - touchstartX;
          if (Math.abs(swipeDistance) < swipeThreshold) {
            return;
          }
          if (swipeDistance < 0) {
            // Swiped left, go to the next page
            const next = document.querySelector('.arrow.next');
            if (next) window.location.href = next.href;
          } else {
            // Swiped right, go to the previous page
            const prev = document.querySelector('.arrow.prev');
            if (prev) window.location.href = prev.href;
          }
        }
      }

      document.addEventListener('touchstart', e => {
        touchstartX = e.changedTouches[0].screenX;
        touchstartY = e.changedTouches[0].screenY;
      }, { passive: true });
      document.addEventListener('touchend', e => {
        touchendX = e.changedTouches[0].screenX;
        touchendY = e.changedTouches[0].screenY;
        handleSwipe();
      }, { passive: true });
      // --- MOUSE WHEEL NAVIGATION (Desktop) ---
      let isThrottled = false;
      document.addEventListener('wheel', (e) => {
        if (window.innerWidth > 600 && !isThrottled) {
          isThrottled = true;
          setTimeout(() => { isThrottled = false; }, 1000); // 1-second cooldown

          if (e.deltaY > 0) {
            // Scrolled down
            const next = document.querySelector('.arrow.next');
        
            if (next) window.location.href = next.href;
          } else {
            // Scrolled up
            const prev = document.querySelector('.arrow.prev');
            if (prev) window.location.href = prev.href;
          }
        }
      }, { passive: true });
    </script>
  </body>
</html>