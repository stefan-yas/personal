---
// src/pages/api/wall.astro
import type { APIRoute } from 'astro';
import { promises as fs } from 'fs';
import path from 'path';

const wallPath = path.resolve(process.cwd(), 'src/data/wall.json');

async function getMessages() {
  try {
    await fs.access(wallPath);
    const data = await fs.readFile(wallPath, 'utf-8');
    return data.trim() === '' ? [] : JSON.parse(data);
  } catch (error) {
    return [];
  }
}

export const GET: APIRoute = async () => {
  const messages = await getMessages();
  return new Response(JSON.stringify(messages), {
    status: 200,
    headers: { 'Content-Type': 'application/json' },
  });
};

export const POST: APIRoute = async ({ request }) => {
  try {
    const { message } = await request.json();
    if (!message || typeof message !== 'string' || message.trim() === '') {
      return new Response(JSON.stringify({ message: 'Invalid message.' }), { status: 400 });
    }

    const messages = await getMessages();

    messages.unshift({
      text: message.trim(),
      timestamp: new Date().toISOString(),
    });

    await fs.writeFile(wallPath, JSON.stringify(messages, null, 2));

    return new Response(JSON.stringify({ message: 'Message posted!' }), { status: 201 });
  } catch (error) {
    console.error('Error in POST /api/wall:', error);
    return new Response(JSON.stringify({ message: 'Could not post message.' }), { status: 500 });
  }
};